#! /bin/bash

script_dir=$(dirname $(readlink -e $BASH_SOURCE))

orig_args=${@}

while [ $# -gt 0 ]
do

key="$1"

case $key in
        --base-path)
		base_path=$2
		shift
                ;;
esac
shift
done

${script_dir}/internal/gen-oe-setup.py ${orig_args} || exit 1

base_path=$(realpath $base_path)

test -e ${base_path}/.setup_build || exit 1

. ${base_path}/.setup_build > /dev/null

mv ${base_path}/.setup_build ${base_path}/.setup_run

echo ${EXEC} >> source_build

bitbake -p || exit 1

${script_dir}/internal/add-layers.py --layers $(printf %s $BBLAYERS) || exit 1

mv conf/local.conf conf/local.conf.bk

echo "## The following variables have been automatically added from the" > conf/local.conf
echo "## init-new-build script" >> conf/local.conf
echo "" >> conf/local.conf
echo "MACHINE ?= '${MACHINE}'" >> conf/local.conf
echo "DISTRO ?= '${DISTRO}'" >> conf/local.conf
echo "DL_DIR = '${DL_DIR}'" >> conf/local.conf
echo "SSTATE_DIR = '${SSTATE_DIR}'" >> conf/local.conf
echo "PERSISTENT_DIR = '${PERSISTENT_DIR}'" >> conf/local.conf
echo "" >> conf/local.conf

# SELinux

cat conf/local.conf.bk >> conf/local.conf
rm conf/local.conf.bk


cat <<SELINUX_CONFIG_BLOCK >> conf/local.conf

DISTRO_FEATURES:append=" acl xattr pam selinux"

##
## See: https://github.com/ni/meta-selinux/tree/nilrt/master/kirkstone
##

##
## Specify a preferred provider for the virtual/refpolicy:
##

# PREFERRED_PROVIDER_virtual/refpolicy ?= "refpolicy-mls"

##
## Enable the preferred refpolicy-minimum:
##

# PREFERRED_VERSION_refpolicy-minimum = "2.20151208"
# PREFERRED_VERSION_refpolicy = "2.20151208"


##
## By default selinux enabled images coming up with "sysvinit" as init manager,
## we can use "systemd" as an init manager using below changes to local.conf
##

DISTRO_FEATURES:remove = " sysvinit"
DISTRO_FEATURES:append = " systemd"
VIRTUAL-RUNTIME_init_manager = "systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED = ""

SELINUX_CONFIG_BLOCK


cat <<CVE_CONFIG_BLOCK >> conf/local.conf

## Adding automatic CVE tracking output to the build from init-new-build script.
##
## NOTE:
##
##  * The CVE database contains entries which have been deemed not to affect
##    OE-Core by the OE community. These CVE entries are excluded (using
##    CVE_CHECK_IGNORE) and will appear as Ignored entries in reports. See
##    the include statement below and the source file:
##
##    ##################################################################
##    #                                                                #
##    # WE NEED TO READ THIS TO SEE IF WE AGREE WITH THEIR CONCLUSIONS #
##    #                                                                #
##    # ------ On 2023-02-07 this caused 20 CVEs to be ignored. ------ #
##    #                                                                #
##    ##################################################################
##
##    * ./arran-build-submodules.git/openembedded/oe-core.git/meta/conf/distro/include/cve-extra-exclusions.inc
##
##  * Sometimes the build will be delayed due to the cve-fetch activity which
##    updates the local CVE database.
##
##  * The cve-search logging messes up your CLI build output with WARNING output.
##
##  * For more info about cve-search, see:
##
##    * https://docs.yoctoproject.org/dev/dev-manual/vulnerabilities.html
##
INHERIT += "cve-check"
include conf/distro/include/cve-extra-exclusions.inc

CVE_CONFIG_BLOCK

cat <<EOF

Your build has been setup, please source the file "source_build" to
get started.

. ${BUILDDIR}/source_build

EOF
